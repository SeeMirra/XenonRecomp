name: Build XenonRecomp for Windows and Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cc: clang
            cxx: clang++
            generator: Ninja
          - os: windows-latest
            cc: clang-cl
            cxx: clang-cl
            generator: "Visual Studio 17 2022"
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y clang ninja-build

    - name: Install Dependencies (Windows)
      if: runner.os == 'Windows'
      run: choco install ninja --yes

    - name: Configure CMake (Linux)
      if: runner.os == 'Linux'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
          -G "${{ matrix.generator }}"

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: >
        cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl
        -G "Visual Studio 17 2022"

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }}

    - name: Run Tests
      working-directory: build
      run: ctest -C ${{ env.BUILD_TYPE }}

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: XenonRecomp-${{ matrix.os }}
        path: build
